version: "3.7"

services:
  app:
    build: app
    container_name: django-gunicorn
    restart: always
    env_file:
      - django.env
    command:
      "pipenv run gunicorn --workers=4  --timeout 120  --bind=0.0.0.0:8000 netease.wsgi"

  nginx:
    image: nginx:1.17
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - app

  stats:
    image: docker.io/bitnami/rabbitmq:3.8-debian-10
    container_name: rabbitmq-stats
    environment:
      - RABBITMQ_NODE_TYPE=stats
      - RABBITMQ_NODE_NAME=rabbit@stats
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    restart: always
    ports:
      - '15672:15672'
    volumes:
      - 'rabbitmqstats_data:/bitnami'
  queue-disc1:
    image: docker.io/bitnami/rabbitmq:3.8-debian-10
    container_name: rabbitmq-queue-disc1
    environment:
      - RABBITMQ_NODE_TYPE=queue-disc
      - RABBITMQ_NODE_NAME=rabbit@queue-disc1
      - RABBITMQ_CLUSTER_NODE_NAME=rabbit@stats
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    restart: always
    volumes:
      - 'rabbitmqdisc1_data:/bitnami'
  queue-ram1:
    image: docker.io/bitnami/rabbitmq:3.8-debian-10
    container_name: rabbitmq-queue-ram1
    environment:
      - RABBITMQ_NODE_TYPE=queue-ram
      - RABBITMQ_NODE_NAME=rabbit@queue-ram1
      - RABBITMQ_CLUSTER_NODE_NAME=rabbit@stats
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    restart: always
    volumes:
      - 'rabbitmqram1_data:/bitnami'

  redis:
    image: 'bitnami/redis:6.0'
    container_name: redis
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  worker:
    build: worker
    container_name: worker
    restart: always
    env_file: 
      - worker/.env
    depends_on: 
      - app
      - nginx
      - redis
      - stats

volumes:
  rabbitmqstats_data:
    driver: local
  rabbitmqdisc1_data:
    driver: local
  rabbitmqram1_data:
    driver: local

